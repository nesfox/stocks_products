version: '3.8'

networks:
  app-network:
    driver: bridge

services:
  db:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: netology_stocks_products
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1305
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db_init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d netology_stocks_products"]
      interval: 10s
      timeout: 5s
      retries: 5

  pg_admin:
    image: dpage/pgadmin4:7.8
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin1@mail.com
      PGADMIN_DEFAULT_PASSWORD: 5728821q
    ports:
      - "8000:80"  # PgAdmin на порту 8000
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: backend
    environment:
      DATABASE_URL: postgresql://postgres:1305@db:5432/netology_stocks_products
      DEBUG: "True"
    volumes:
      - .:/app
    ports:
      - "8002:8000"  # Изменённый порт для backend
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy

  nginx:
    image: nginx:1.25-alpine
    container_name: nginx
    ports:
      - "8001:80"  # Nginx на порту 8001
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./static:/static
    networks:
      - app-network
    depends_on:
      - backend

volumes:
  postgres_data: